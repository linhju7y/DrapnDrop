{"version":3,"sources":["App.js","overflower.js","Resizable.js","reportWebVitals.js","index.js"],"names":["finalSpaceCharacters","id","name","App","useState","characters","updateCharacters","className","onDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","droppableId","provided","droppableProps","ref","innerRef","map","thumb","draggableId","draggableProps","dragHandleProps","placeholder","ReplaceOnOverflow","short","orientation","children","Resizable","align","width","height","rootElement","document","getElementById","ReactDOM","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"+PASMA,G,MAAuB,CAC3B,CACEC,GAAI,IACJC,KAAM,SAGR,CACED,GAAI,IACJC,KAAM,SAGR,CACED,GAAI,IACJC,KAAM,SAGR,CACED,GAAI,IACJC,KAAM,SAGR,CACED,GAAI,IACJC,KAAM,WAyEKC,MApEf,WAAgB,IAAD,EAC0BC,mBAASJ,GADnC,mBACNK,EADM,KACMC,EADN,KAcb,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,6CACA,cAAC,IAAD,CAAiBC,UAdvB,SAAyBC,GACvB,GAAKA,EAAOC,YAAZ,CAEA,IAAMC,EAAQC,MAAMC,KAAKR,GAHM,EAIPM,EAAMG,OAAOL,EAAOM,OAAOC,MAAO,GAAnDC,EAJwB,oBAK/BN,EAAMG,OAAOL,EAAOC,YAAYM,MAAO,EAAGC,GAE1CX,EAAiBK,KAOb,SACE,cAAC,IAAD,CAAWO,YAAY,aAAvB,SACG,SAACC,GAAD,OACC,6CAAIZ,UAAU,cAAiBY,EAASC,gBAAxC,IAAwDC,IAAKF,EAASG,SAAtE,UACGjB,EAAWkB,KAAI,WAAoBP,GAAW,IAA7Bf,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,KAAwB,EAAlBsB,MAC1B,OACE,cAAC,IAAD,CAAoBC,YAAaxB,EAAIe,MAAOA,EAA5C,SACG,SAACG,GAAD,OACC,wDAAIE,IAAKF,EAASG,UAAcH,EAASO,gBAAoBP,EAASQ,iBAAtE,aACE,4BACIzB,SAJMD,MAWnBkB,EAASS,2B,QCpEbC,G,MAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,SAAvB,OAC/B,sBAAKzB,UAAS,4CAAuCwB,GAArD,UACE,qBAAKxB,UAAU,oBAAf,SAAoCuB,IACpC,qBAAKvB,UAAU,mBAAf,SAAmCyB,S,YCCvC,SAASC,IACP,OAEE,sBAAK1B,UAAU,YAAY2B,MAAM,SAAjC,UACI,+CACF,cAAC,eAAD,CAAcC,MAAO,IAAKC,OAAQ,IAAK7B,UAAU,MAAjD,SACE,cAAC,EAAD,CAAmBwB,YAAY,aAAaD,MAAM,sBAAlD,SACE,cAAC,EAAD,CAAmBC,YAAY,WAAWD,MAAM,oBAAhD,SACE,qBAAKvB,UAAU,eAAf,SACE,uBAAMA,UAAU,UAAhB,sBAEE,uBAFF,oBAYC0B,QAETI,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAACR,EAAD,IAAeI,GChC/B,IAYeK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCIdH,IAASC,OACP,eAAC,IAAMU,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFb,SAASC,eAAe,SAQ1BG,M","file":"static/js/main.e5381bd5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\n\nimport './App.css';\n\n\n\n\nconst finalSpaceCharacters = [\n  {\n    id: '1',\n    name: 'dnd 1',\n    \n  },\n  {\n    id: '2',\n    name: 'dnd 2',\n    \n  },\n  {\n    id: '3',\n    name: 'dnd 3',\n    \n  },\n  {\n    id: '4',\n    name: 'dnd 4',\n    \n  },\n  {\n    id: '5',\n    name: 'dnd 5',\n    \n  }\n]\n\nfunction App() {\n  const [characters, updateCharacters] = useState(finalSpaceCharacters);\n  \n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n\n    const items = Array.from(characters);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    updateCharacters(items);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Drag n Drop</h1>\n        <DragDropContext onDragEnd={handleOnDragEnd}>\n          <Droppable droppableId=\"characters\">\n            {(provided) => (\n              <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\n                {characters.map(({id, name, thumb}, index) => {\n                  return (\n                    <Draggable key={id} draggableId={id} index={index}>\n                      {(provided) => (\n                        <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                          <p>\n                            { name }\n                          </p>\n                        </li>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                {provided.placeholder}\n              </ul>\n            )}\n          </Droppable>\n        </DragDropContext>\n        {/* <div>\n      <ResizableBox width={300} height={300} className=\"box\">\n        <ReplaceOnOverflow orientation=\"horizontal\" short=\"no horizontal space\">\n          <ReplaceOnOverflow orientation=\"vertical\" short=\"no vertical space\">\n            <div className=\"content-wrap\">\n              <span className=\"content\">\n                I'm hiding if there is\n                <br />\n                no space for me\n              </span>\n            </div>\n          </ReplaceOnOverflow>\n        </ReplaceOnOverflow>\n      </ResizableBox>\n    </div> */}\n        \n      \n    \n \n\n      </header>\n      \n    </div>\n    \n    \n  );\n}\n\nexport default App;","import \"./overflower.css\";\r\n\r\nimport React from \"react\";\r\n\r\nexport const ReplaceOnOverflow = ({ short, orientation, children }) => (\r\n  <div className={`overflower overflower_orientation_${orientation}`}>\r\n    <div className=\"overflower__short\">{short}</div>\r\n    <div className=\"overflower__long\">{children}</div>\r\n  </div>\r\n);\r\n\r\nconst nbsp = \"\\u00A0\";\r\n\r\nexport const HideOnOverflow = ({ children }) => (\r\n  <ReplaceOnOverflow orientation=\"horizontal\" short={nbsp}>\r\n    <ReplaceOnOverflow orientation=\"vertical\" short={nbsp}>\r\n      {children}\r\n    </ReplaceOnOverflow>\r\n  </ReplaceOnOverflow>\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ResizableBox } from \"react-resizable\";\r\nimport { ReplaceOnOverflow } from \"./overflower\";\r\nimport \"./styles.css\";\r\nimport \"react-resizable/css/styles.css\";\r\n\r\n\r\nfunction Resizable() {\r\n  return (\r\n\r\n    <div className=\"Resizable\" align=\"center\">\r\n        <h1>Resizable Box</h1>\r\n      <ResizableBox width={300} height={300} className=\"box\">\r\n        <ReplaceOnOverflow orientation=\"horizontal\" short=\"no horizontal space\">\r\n          <ReplaceOnOverflow orientation=\"vertical\" short=\"no vertical space\">\r\n            <div className=\"content-wrap\">\r\n              <span className=\"content\">\r\n                Resizable\r\n                <br />\r\n                box\r\n              </span>\r\n            </div>\r\n          </ReplaceOnOverflow>\r\n        </ReplaceOnOverflow>\r\n      </ResizableBox>\r\n    </div>\r\n  );\r\n}\r\nexport default Resizable;\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<Resizable />, rootElement);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Resizable from './Resizable';\nimport reportWebVitals from './reportWebVitals';\n\n// import { ResizableBox } from \"react-resizable\";\n// import { ReplaceOnOverflow } from \"./overflower\";\n// import \"react-resizable/css/styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Resizable />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//var ReactDOM = require('react-dom');\n"],"sourceRoot":""}